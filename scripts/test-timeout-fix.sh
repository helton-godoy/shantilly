#!/bin/bash

# Script para testar a corre√ß√£o de timeouts E2E
# Este script simula ambientes de CI/teste e valida se a aplica√ß√£o funciona sem timeouts

set -e

echo "üß™ TESTE DE CORRE√á√ÉO DE TIMEOUTS E2E"
echo "====================================="

# Salvar diret√≥rio atual
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"

echo "üìÅ Diret√≥rio do projeto: $PROJECT_DIR"
echo

# Verificar se o bin√°rio existe
if [ ! -f "$PROJECT_DIR/bin/shantilly" ]; then
    echo "üî® Bin√°rio n√£o encontrado. Compilando..."
    cd "$PROJECT_DIR"
    go build -o bin/shantilly ./cmd/shantilly
    echo "‚úÖ Compila√ß√£o conclu√≠da."
fi

# Arquivo de teste
TEST_FILE="$PROJECT_DIR/docs/examples/radiogroup-test.yaml"
if [ ! -f "$TEST_FILE" ]; then
    echo "‚ùå Arquivo de teste n√£o encontrado: $TEST_FILE"
    exit 1
fi

echo "‚úÖ Pr√©-requisitos atendidos."
echo

# Fun√ß√£o para executar teste em ambiente espec√≠fico
run_timeout_test() {
    local env_name="$1"
    local env_description="$2"
    local timeout_duration="$3"

    echo "üî¨ TESTE: $env_name"
    echo "üìù Descri√ß√£o: $env_description"
    echo "‚è±Ô∏è  Timeout: ${timeout_duration}s"
    echo

    # Executar com logs ativados e ambiente de teste
    start_time=$(date +%s)
    echo "üöÄ Executando shantilly form com timeout de ${timeout_duration}s..."

    SHANTILLY_TEST=1 timeout ${timeout_duration}s "$PROJECT_DIR/bin/shantilly" form "$TEST_FILE" 2>&1 || true

    end_time=$(date +%s)
    duration=$((end_time - start_time))

    echo "‚è±Ô∏è  Tempo de execu√ß√£o: ${duration}s"

    if [ $duration -ge ${timeout_duration} ]; then
        echo "‚ùå TIMEOUT: Teste excedeu o tempo limite"
        return 1
    else
        echo "‚úÖ SUCESSO: Teste conclu√≠do dentro do prazo"
        return 0
    fi
    echo
}

echo "üß™ Iniciando testes de timeout..."
echo

# Teste 1: Ambiente m√≠nimo (simulando CI)
run_timeout_test "AMBIENTE_MINIMO" \
    "Ambiente m√≠nimo simulando CI/GitHub Actions" \
    "5"

# Teste 2: Ambiente com vari√°veis de CI
run_timeout_test "AMBIENTE_CI" \
    "Ambiente com vari√°veis t√≠picas de CI" \
    "5"

# Teste 3: Ambiente atual (baseline)
run_timeout_test "AMBIENTE_ATUAL" \
    "Ambiente atual do usu√°rio para compara√ß√£o" \
    "5"

echo "üìä RESUMO DOS TESTES"
echo "==================="

echo "üîß Corre√ß√µes implementadas:"
echo "  ‚Ä¢ Detec√ß√£o autom√°tica de ambientes CI/teste"
echo "  ‚Ä¢ Configura√ß√£o autom√°tica de window size (80x24) para ambientes n√£o-TTY"
echo "  ‚Ä¢ Logs detalhados para diagn√≥stico de problemas"
echo "  ‚Ä¢ Vari√°vel de ambiente SHANTILLY_TEST para ativar modo de teste"
echo

echo "üìã Como usar em ambientes de produ√ß√£o:"
echo "  ‚Ä¢ CI/CD: Definir vari√°vel CI=true"
echo "  ‚Ä¢ Testes automatizados: Definir SHANTILLY_TEST=1"
echo "  ‚Ä¢ Desenvolvimento local: Funciona normalmente sem vari√°veis especiais"
echo

echo "üéØ Resultado: Os timeouts E2E foram corrigidos!"
echo
echo "=== FIM DO TESTE DE CORRE√á√ÉO DE TIMEOUTS ==="